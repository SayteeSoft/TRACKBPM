// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Generates album art for a given song.
 *
 * - generateAlbumArt - A function that generates album art.
 * - GenerateAlbumArtInput - The input type for the generateAlbumArt function.
 * - GenerateAlbumArtOutput - The return type for the generateAlbumArt function.
 */
import { ai } from '@/ai/genkit';
import { z } from 'genkit';

const GenerateAlbumArtInputSchema = z.object({
    artist: z.string().describe('The artist of the song.'),
    title: z.string().describe('The title of the song.'),
});
export type GenerateAlbumArtInput = z.infer<typeof GenerateAlbumArtInputSchema>;

const GenerateAlbumArtOutputSchema = z.object({
    albumArt: z.string().describe("A data URI of the generated album art. Expected format: 'data:<mimetype>;base64,<encoded_data>'."),
});
export type GenerateAlbumArtOutput = z.infer<typeof GenerateAlbumArtOutputSchema>;


export async function generateAlbumArt(input: GenerateAlbumArtInput): Promise<GenerateAlbumArtOutput> {
    return generateAlbumArtFlow(input);
}


const generateAlbumArtFlow = ai.defineFlow(
    {
        name: 'generateAlbumArtFlow',
        inputSchema: GenerateAlbumArtInputSchema,
        outputSchema: GenerateAlbumArtOutputSchema,
    },
    async (input) => {
        const { media } = await ai.generate({
            model: 'googleai/gemini-2.0-flash-preview-image-generation',
            prompt: `Generate album art for the song "${input.title}" by ${input.artist}. The art should be in a minimalist, modern style.`,
            config: {
                responseModalities: ['TEXT', 'IMAGE'],
            },
        });
        
        if (!media.url) {
            // fallback to a placeholder if generation fails
            return { albumArt: `https://placehold.co/100x100.png` };
        }

        return { albumArt: media.url };
    }
);
